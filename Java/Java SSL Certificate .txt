import org.apache.http.conn.ssl.SSLConnectionSocketFactory;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.ssl.SSLContexts;
import org.apache.http.ssl.TrustStrategy;
import org.springframework.http.client.HttpComponentsClientHttpRequestFactory;
import org.springframework.web.client.RestTemplate;

import javax.net.ssl.SSLContext;
import javax.net.ssl.TrustManager;
import javax.net.ssl.X509TrustManager;
import java.security.KeyManagementException;
import java.security.KeyStoreException;
import java.security.NoSuchAlgorithmException;
import java.security.cert.X509Certificate;



TrustStrategy acceptingTrustStrategy = (X509Certificate[] chain, String authType) -> true;

					SSLContext sslContext = SSLContexts.custom()
							.loadTrustMaterial(null, acceptingTrustStrategy)
							.build();

					SSLConnectionSocketFactory csf = new SSLConnectionSocketFactory(sslContext);

					CloseableHttpClient httpClient = HttpClients.custom()
							.setSSLSocketFactory(csf)
							.build();

					HttpComponentsClientHttpRequestFactory requestFactory =
							new HttpComponentsClientHttpRequestFactory();

					requestFactory.setHttpClient(httpClient);

					RestTemplate restTemplate = new RestTemplate(requestFactory);